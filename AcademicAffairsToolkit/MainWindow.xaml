<Fluent:RibbonWindow x:Class="AcademicAffairsToolkit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AcademicAffairsToolkit"
        mc:Ignorable="d"
        xmlns:Fluent="urn:fluent-ribbon"
        Title="Academic Affairs Toolkit"
        Height="500" Width="800" MinHeight="300" MinWidth="400"
        WindowStartupLocation="CenterScreen">

    <Window.CommandBindings>
        <CommandBinding Command="Open" CanExecute="OpenCommandCanExecute" Executed="OpenCommandExecuted"/>
        <CommandBinding Command="Save" CanExecute="SaveCommandCanExecute" Executed="SaveCommandExecuted"/>
        <CommandBinding Command="Close" CanExecute="CloseCommandCanExecute" Executed="CloseCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.ToggleView}" CanExecute="ToggleViewCommandCanExecute" Executed="ToggleViewCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.StartArrangement}" CanExecute="StartArrangementCanExecute" Executed="StartArrangementExecuted"/>
    </Window.CommandBindings>

    <Fluent:RibbonWindow.Resources>
        <Page x:Key="OpenFilePage">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0">
                    <Fluent:Button Height="Auto" Header="Open..." Command="Open" IsDefinitive="False">
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource OpenFileIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Open" Text="Open files for arrangement."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Margin="0,5" Height="Auto" Header="Open then close this page..." Command="Open" IsDefinitive="True">
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource OpenFileIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Open and close this page" Text="Open files for arrangement; close the file open page."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </StackPanel>
                <TextBlock Grid.Row="0" Grid.Column="1" FontSize="24" Margin="10" Text="Recent"/>
                <Fluent:Gallery Grid.Row="1" Grid.Column="1" MaxItemsInRow="1" Margin="10,0" Padding="0,5" BorderThickness="1" HorizontalContentAlignment="Stretch" MouseDoubleClick="Gallery_MouseDoubleClick"
                                ItemsSource="{Binding RecentlyOpenedFiles, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                    <Fluent:Gallery.ItemTemplate>
                        <DataTemplate>
                            <!--binding to a tuple-->
                            <StackPanel Orientation="Vertical" ToolTip="{Binding Item1}" Margin="5">
                                <TextBlock Text="{Binding Item1}" FontWeight="Bold" TextWrapping="Wrap"/>
                                <TextBlock Text="{Binding Item2}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Fluent:Gallery.ItemTemplate>
                </Fluent:Gallery>
            </Grid>
        </Page>

        <Style x:Key="PolicySpinnerStyle" TargetType="{x:Type Fluent:Spinner}">
            <Setter Property="Format" Value="N0"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="InputWidth" Value="60"/>
        </Style>
    </Fluent:RibbonWindow.Resources>

    <DockPanel>
        <Fluent:Ribbon DockPanel.Dock="Top">
            <!--start page-->
            <Fluent:Ribbon.StartScreen>
                <Fluent:StartScreen IsOpen="True">
                    <Fluent:StartScreenTabControl RightContent="{StaticResource OpenFilePage}">
                        <Fluent:StartScreenTabControl.LeftContent>
                            <StackPanel>
                                <TextBlock Text="Welcome"
                                           Margin="5"
                                           FontSize="36"
                                           Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}"/>
                                <TextBlock Margin="5"
                                           Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}">
                                    To begin, select invigilate file and TR office file.<LineBreak/>
                                    Click "Open..." to select two files.<LineBreak/>
                                    Click "Close start screen" when done.
                                </TextBlock>
                                <Fluent:MenuItem Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}"
                                                 Header="Close start screen"
                                                 Height="32"
                                                 IsDefinitive="True"
                                                 Margin="5">
                                    <Fluent:MenuItem.Icon>
                                        <Rectangle Fill="{StaticResource CancelIcon}"/>
                                    </Fluent:MenuItem.Icon>
                                </Fluent:MenuItem>
                            </StackPanel>
                        </Fluent:StartScreenTabControl.LeftContent>
                    </Fluent:StartScreenTabControl>
                </Fluent:StartScreen>
            </Fluent:Ribbon.StartScreen>

            <!--file menu-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="Open">
                            <Frame Content="{StaticResource OpenFilePage}" Margin="20"/>
                        </Fluent:BackstageTabItem>

                        <Fluent:Button Header="Save As"
                                       Command="Save"/>

                        <Fluent:BackstageTabItem Header="About">
                            <StackPanel Margin="20" Orientation="Vertical">
                                <TextBlock FontSize="36" Margin="5">Academic Affairs Toolkit</TextBlock>
                                <TextBlock Margin="5" Text="Version 0.0.0.7"/>
                                <TextBlock Margin="5" Text="Third party project/resources: "/>
                                <Fluent:Gallery BorderThickness="1" Margin="5" MaxItemsInRow="1">
                                    <Fluent:GalleryItem>Extended WPF Toolkit</Fluent:GalleryItem>
                                    <Fluent:GalleryItem>Fluent.Ribbon</Fluent:GalleryItem>
                                    <Fluent:GalleryItem>npoi</Fluent:GalleryItem>
                                    <Fluent:GalleryItem>RangeTree</Fluent:GalleryItem>
                                    <Fluent:GalleryItem>Visual Studio 2019 Icons Library</Fluent:GalleryItem>
                                </Fluent:Gallery>

                            </StackPanel>
                        </Fluent:BackstageTabItem>

                        <Fluent:SeparatorTabItem/>

                        <Fluent:Button Header="Exit" Command="Close"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--home tab-->
            <Fluent:RibbonTabItem Header="Home" ReduceOrder="clipboardGroup,constraintGroup,arrangementGroup">
                <Fluent:RibbonGroupBox Name="clipboardGroup" Header="Clipboard">
                    <Fluent:Button Header="Copy"
                                   Icon="{StaticResource Fluent.Ribbon.Images.Copy}"
                                   LargeIcon="{StaticResource Fluent.Ribbon.Images.Copy}"
                                   Command="Copy"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="arrangementGroup" Header="Arrangement">
                    <Fluent:Button Header="Start auto arrangement"
                                   Command="{x:Static local:MainWindow.StartArrangement}">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Start arrangement"
                                              Text="Arrange according to invigilate plan, TR office and constraints."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Header="Stop arrangement">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource StopIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource StopIcon}"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>

                    <Separator/>

                    <Fluent:Spinner Name="iterationsSpinner"
                                    Style="{StaticResource PolicySpinnerStyle}" Header="Iterations: "
                                    Maximum="2000" Minimum="100" Value="1000" Increment="10">
                        <Fluent:Spinner.Icon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Spinner.Icon>
                        <Fluent:Spinner.ToolTip>
                            <Fluent:ScreenTip Title="Iterations">
                                <Fluent:ScreenTip.Text>
                                    Set how many iterations does the algorithm take.
                                    A larger number may be helpful for finding the optimal arrangement, while a smaller number can reduce execution time.
                                </Fluent:ScreenTip.Text>
                            </Fluent:ScreenTip>
                        </Fluent:Spinner.ToolTip>
                    </Fluent:Spinner>

                    <Fluent:Spinner Name="populationSpinner"
                                    Style="{StaticResource PolicySpinnerStyle}" Header="Population size: "
                                    Maximum="200" Minimum="10" Value="100">
                        <Fluent:Spinner.Icon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Spinner.Icon>
                        <Fluent:Spinner.ToolTip>
                            <Fluent:ScreenTip Title="Population size"
                                              Text="Set how large a population (set of intermediate solutions) is in the algorithm."/>
                        </Fluent:Spinner.ToolTip>
                    </Fluent:Spinner>

                    <Fluent:Spinner Name="solutionsSpinner"
                                    Style="{StaticResource PolicySpinnerStyle}" Header="Solution num: "
                                    Maximum="{Binding Value, ElementName=populationSpinner}" Minimum="1" Value="10">
                        <Fluent:Spinner.Icon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Spinner.Icon>
                        <Fluent:Spinner.ToolTip>
                            <Fluent:ScreenTip Title="Number of solutions">
                                <Fluent:ScreenTip.Text>
                                    Set how many arrangement solutions will be displayed when done.
                                    The value must not be larger than "Population size".
                                </Fluent:ScreenTip.Text>
                            </Fluent:ScreenTip>
                        </Fluent:Spinner.ToolTip>
                    </Fluent:Spinner>

                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="constraintGroup" Header="Constraints">
                    <Fluent:Button Header="New constraint" Click="AddConstraintButtonClick">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource NewRuleIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource NewRuleIcon}"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button Header="Manage..." Click="ManageConstraintButtonClick">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="View">
                    <Fluent:ToggleButton Name="invigilateFileViewButton"
                                         Header="Invigilate file"
                                         GroupName="viewGroup"
                                         Size="Middle"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/InvigilateFileViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Invigilate file view"
                                              Text="See invigilate data loaded from file."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Name="trOfficeFileViewButton"
                                         Header="TR office file"
                                         GroupName="viewGroup"
                                         Size="Middle"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TRFileViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Teaching and researching office file view"
                                              Text="See teaching and researching office data loaded from file."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Name="tableViewButton"
                                         Header="Result table"
                                         GroupName="viewGroup"
                                         Size="Middle"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TableViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource TableIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Table view"
                                              Text="See result in table view."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="Result view" Group="{Binding Source={x:Reference Name=resultGroup}}">
                <Fluent:RibbonGroupBox Header="Selected">
                    <Fluent:InRibbonGallery AlternationCount="{Binding Path=(local:Session.Arrangements).Count}"
                                            ItemsSource="{Binding Path=(local:Session.Arrangements)}"
                                            IsSynchronizedWithCurrentItem="True"
                                            MaxItemsInRow="3"
                                            MinWidth="160">
                        <Fluent:InRibbonGallery.ItemTemplate>
                            <!--https://stackoverflow.com/questions/745568/numbered-listbox/748383-->
                            <DataTemplate>
                                <TextBlock MinWidth="60"
                                           Text="{Binding RelativeSource={RelativeSource TemplatedParent},
                                    Path=TemplatedParent.(ItemsControl.AlternationIndex), StringFormat=Solution \#\{0\}}"/>
                            </DataTemplate>
                        </Fluent:InRibbonGallery.ItemTemplate>
                        <Fluent:InRibbonGallery.ToolTip>
                            <Fluent:ScreenTip Title="Solution index: "
                                              Text="Select a solution to see here if there're more than one."/>
                        </Fluent:InRibbonGallery.ToolTip>
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Filter">

                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:Ribbon.ContextualGroups>
                <Fluent:RibbonContextualTabGroup x:Name="resultGroup" Header="Result Tools" Background="Green" BorderBrush="Green"
                                                 Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, ElementName=tableViewButton, Path=IsChecked}"/>
            </Fluent:Ribbon.ContextualGroups>
        </Fluent:Ribbon>

        <!--status bar-->
        <Fluent:StatusBar DockPanel.Dock="Bottom">
            <Fluent:StatusBarItem HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <ProgressBar Name="arrangementProgessBar" MinWidth="160" Maximum="{Binding Value, ElementName=iterationsSpinner}" Visibility="Collapsed"/>
            </Fluent:StatusBarItem>
            <Fluent:StatusBarItem HorizontalAlignment="Left">
                <TextBlock Name="statusText" TextTrimming="CharacterEllipsis" Text="Arrangement is not started"/>
            </Fluent:StatusBarItem>
        </Fluent:StatusBar>

        <!--window content-->
        <Frame Name="mainViewFrame" NavigationUIVisibility="Hidden"/>
    </DockPanel>
</Fluent:RibbonWindow>
