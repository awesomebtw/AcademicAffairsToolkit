<Fluent:RibbonWindow x:Class="AcademicAffairsToolkit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AcademicAffairsToolkit"
        mc:Ignorable="d"
        xmlns:Fluent="urn:fluent-ribbon"
        Title="Academic Affairs Toolkit"
        Height="500" Width="800" MinHeight="300" MinWidth="400"
        WindowStartupLocation="CenterScreen">
    
    <Window.CommandBindings>
        <CommandBinding Command="Open" CanExecute="OpenCommandCanExecute" Executed="OpenCommandExecuted"/>
        <CommandBinding Command="Save" CanExecute="SaveCommandCanExecute" Executed="SaveCommandExecuted"/>
        <CommandBinding Command="Close" CanExecute="CloseCommandCanExecute" Executed="CloseCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.ToggleView}" CanExecute="ToggleViewCommandCanExecute" Executed="ToggleViewCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.StartArrangement}" CanExecute="StartArrangementCanExecute" Executed="StartArrangementExecuted"/>
    </Window.CommandBindings>

    <Fluent:RibbonWindow.Resources>
        <Page x:Key="OpenFilePage">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="1" Grid.Column="0">
                    <Fluent:Button Height="Auto" Header="Open..." Command="Open" IsDefinitive="False">
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource OpenFileIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Open" Text="Open files for arrangement."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </StackPanel>
                <TextBlock Grid.Row="0" Grid.Column="1" FontSize="24" Margin="10" Text="Recent"/>
                <Fluent:Gallery Grid.Row="1" Grid.Column="1" MaxItemsInRow="1" Margin="10,0" Padding="0,5" BorderThickness="1"
                                ItemsSource="{Binding RecentlyOpenedFiles, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                    <Fluent:Gallery.ItemTemplate>
                        <DataTemplate>
                            <!--binding to a tuple-->
                            <StackPanel Orientation="Vertical" ToolTip="{Binding Item1}" Margin="5">
                                <TextBlock Text="{Binding Item1}" FontWeight="Bold" TextWrapping="Wrap"/>
                                <TextBlock Text="{Binding Item2}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Fluent:Gallery.ItemTemplate>
                </Fluent:Gallery>
            </Grid>
        </Page>
    </Fluent:RibbonWindow.Resources>

    <DockPanel>
        <Fluent:Ribbon DockPanel.Dock="Top">
            <!--start page-->
            <Fluent:Ribbon.StartScreen>
                <Fluent:StartScreen IsOpen="True">
                    <Fluent:StartScreenTabControl RightContent="{StaticResource OpenFilePage}">
                        <Fluent:StartScreenTabControl.LeftContent>
                            <StackPanel>
                                <TextBlock Text="Welcome"
                                           Margin="5"
                                           FontSize="36"
                                           Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}"/>
                                <TextBlock Margin="5"
                                           Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}">
                                    To begin, select invigilate file and TR office file.<LineBreak/>
                                    Click "Open..." to select two files.<LineBreak/>
                                    Click "Close start screen" when done.
                                </TextBlock>
                                <Fluent:MenuItem Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}"
                                                 Header="Close start screen"
                                                 IsDefinitive="True"
                                                 Margin="5"/>
                            </StackPanel>
                        </Fluent:StartScreenTabControl.LeftContent>
                    </Fluent:StartScreenTabControl>
                </Fluent:StartScreen>
            </Fluent:Ribbon.StartScreen>
            
            <!--file menu-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="Open">
                            <Frame Content="{StaticResource OpenFilePage}" Margin="20"/>
                        </Fluent:BackstageTabItem>

                        <Fluent:Button Header="Save As"
                                       Command="Save"/>

                        <Fluent:BackstageTabItem Header="About">
                            <TextBlock Margin="20" Padding="5">
                                <Run FontSize="36">Academic Affairs Toolkit</Run><LineBreak/>
                                Version 0.0.0.3<LineBreak/>
                                Third-party libraries: Fluent.Ribbon, npoi, RangeTree<LineBreak/>
                                Icons: Visual Studio 2019 Icons Library
                            </TextBlock>
                        </Fluent:BackstageTabItem>

                        <Fluent:SeparatorTabItem/>

                        <Fluent:Button Header="Exit"
                                       Command="Close"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--home tab-->
            <Fluent:RibbonTabItem Header="Home" ReduceOrder="clipboardGroup,constraintGroup,arrangementGroup">
                <Fluent:RibbonGroupBox Name="clipboardGroup" Header="Clipboard">
                    <Fluent:Button Header="Paste"
                                   Icon="{StaticResource Fluent.Ribbon.Images.Paste}"
                                   LargeIcon="{StaticResource Fluent.Ribbon.Images.Paste}"
                                   Command="Paste"/>
                    <Fluent:Button Header="Copy"
                                   Icon="{StaticResource Fluent.Ribbon.Images.Copy}"
                                   LargeIcon="{StaticResource Fluent.Ribbon.Images.Copy}"
                                   Command="Copy"/>
                    <Fluent:Button Header="Cut"
                                   Icon="{StaticResource Fluent.Ribbon.Images.Cut}"
                                   LargeIcon="{StaticResource Fluent.Ribbon.Images.Cut}"
                                   Command="Cut"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="arrangementGroup" Header="Arrange">
                    <Fluent:Button Header="Start auto arrange"
                                   Command="{x:Static local:MainWindow.StartArrangement}">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Start arrangement"
                                              Text="Arrange according to invigilate plan, TR office and constraints."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Header="Arrangement Policy"
                                   Click="ArrangementPolicyButtonClick">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Arrangement policy"
                                              Text="Tune arrangement algorithm."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="constraintGroup" Header="Constraints">
                    <Fluent:ToggleButton Header="Enable constraints">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource EnableRuleIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.LargeIcon>
                            <Rectangle Fill="{StaticResource EnableRuleIcon}"/>
                        </Fluent:ToggleButton.LargeIcon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Enable constraints"
                                              Text="Arrangement algorithm will consider constraints if enabled."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>

                    <Separator/>

                    <Fluent:Button Header="Add constraints">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource NewRuleIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource NewRuleIcon}"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button Header="Manage..." Click="ManageConstraintMenuClick">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="View">
                    <Fluent:SplitButton Header="Original file views">
                        <Fluent:SplitButton.Icon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:SplitButton.Icon>
                        <Fluent:SplitButton.LargeIcon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:SplitButton.LargeIcon>
                        <Fluent:SplitButton.ToolTip>
                            <Fluent:ScreenTip Title="Original file view"
                                              Text="Views related to original files.
                                              Any invalid or empty line will show default values (e.g. 0)."/>
                        </Fluent:SplitButton.ToolTip>
                        <Fluent:MenuItem Name="invigilateFileViewButton"
                                         Header="Invigilate file"
                                         GroupName="viewGroup"
                                         IsCheckable="True"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/InvigilateFileViewPage.xaml">
                            <Fluent:MenuItem.Icon>
                                <Rectangle Fill="{StaticResource RawFileIcon}"/>
                            </Fluent:MenuItem.Icon>
                            <Fluent:MenuItem.ToolTip>
                                <Fluent:ScreenTip Title="Invigilate file view"
                                              Text="See invigilate data loaded from file."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                            </Fluent:MenuItem.ToolTip>
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Name="trOfficeFileViewButton"
                                         Header="TR office file"
                                         GroupName="viewGroup"
                                         IsCheckable="True"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TRFileViewPage.xaml">
                            <Fluent:MenuItem.Icon>
                                <Rectangle Fill="{StaticResource RawFileIcon}"/>
                            </Fluent:MenuItem.Icon>
                            <Fluent:MenuItem.ToolTip>
                                <Fluent:ScreenTip Title="TR office file view"
                                              Text="See teaching and researching office data loaded from file."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                            </Fluent:MenuItem.ToolTip>
                        </Fluent:MenuItem>
                    </Fluent:SplitButton>
                    <Fluent:SplitButton Header="Results view">
                        <Fluent:MenuItem Header="Plain table"
                                         GroupName="viewGroup"
                                         IsCheckable="True"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TableViewPage.xaml">
                            <Fluent:MenuItem.Icon>
                                <Rectangle Fill="{StaticResource TableIcon}"/>
                            </Fluent:MenuItem.Icon>
                            <Fluent:MenuItem.ToolTip>
                                <Fluent:ScreenTip Title="Table view"
                                              Text="See result in table view."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                            </Fluent:MenuItem.ToolTip>
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Gantt"
                                         GroupName="viewGroup"
                                         IsCheckable="True"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/GanttViewPage.xaml">
                            <Fluent:MenuItem.Icon>
                                <Rectangle Fill="{StaticResource GanttIcon}"/>
                            </Fluent:MenuItem.Icon>
                            <Fluent:MenuItem.ToolTip>
                                <Fluent:ScreenTip Title="Gantt view"
                                              Text="See result in gantt view."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                            </Fluent:MenuItem.ToolTip>
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Calendar"
                                         GroupName="viewGroup"
                                         IsCheckable="True"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/CalendarViewPage.xaml">
                            <Fluent:MenuItem.Icon>
                                <Rectangle Fill="{StaticResource CalendarIcon}"/>
                            </Fluent:MenuItem.Icon>
                            <Fluent:MenuItem.ToolTip>
                                <Fluent:ScreenTip Title="Calendar view"
                                              Text="See result in calendar view."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                            </Fluent:MenuItem.ToolTip>
                        </Fluent:MenuItem>
                    </Fluent:SplitButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>

        <!--status bar-->
        <Fluent:StatusBar DockPanel.Dock="Bottom">
            <Fluent:StatusBarItem HorizontalAlignment="Left">
                <TextBlock TextTrimming="CharacterEllipsis" MinWidth="200">
                    <Run Text="TODO: " Foreground="GreenYellow"/>change status bar text here
                </TextBlock>
            </Fluent:StatusBarItem>
        </Fluent:StatusBar>

        <!--window content-->
        <Frame Name="mainViewFrame" NavigationUIVisibility="Hidden"/>
    </DockPanel>
</Fluent:RibbonWindow>
