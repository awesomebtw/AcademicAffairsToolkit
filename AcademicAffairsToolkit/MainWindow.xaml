<Fluent:RibbonWindow x:Class="AcademicAffairsToolkit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AcademicAffairsToolkit"
        mc:Ignorable="d"
        xmlns:Fluent="urn:fluent-ribbon"
        Title="{x:Static local:Resource.Title}"
        Height="500" Width="800" MinHeight="300" MinWidth="400"
        WindowStartupLocation="CenterScreen">

    <Window.CommandBindings>
        <CommandBinding Command="Open" CanExecute="OpenCommandCanExecute" Executed="OpenCommandExecuted"/>
        <CommandBinding Command="Save" CanExecute="SaveCommandCanExecute" Executed="SaveCommandExecuted"/>
        <CommandBinding Command="Close" CanExecute="CloseCommandCanExecute" Executed="CloseCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.ToggleView}" CanExecute="ToggleViewCommandCanExecute" Executed="ToggleViewCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.StartArrangement}" CanExecute="StartArrangementCanExecute" Executed="StartArrangementExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.StopArrangement}" CanExecute="StopCommandCanExecute" Executed="StopCommandExecuted"/>
    </Window.CommandBindings>

    <Fluent:RibbonWindow.Resources>
        <Page x:Key="OpenFilePage">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0">
                    <Fluent:Button Height="Auto" Header="{x:Static local:Resource.Open}" Command="Open" IsDefinitive="False">
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource OpenFileIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.Open}" Text="{x:Static local:Resource.OpenTooltip}"/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Margin="0,5" Height="Auto" Header="{x:Static local:Resource.OpenThenCloseThisPage}" Command="Open" IsDefinitive="True">
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource OpenFileIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.OpenThenCloseThisPage}"
                                              Text="{x:Static local:Resource.OpenThenCloseThisPageTooltip}"/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </StackPanel>
                <TextBlock Grid.Row="0" Grid.Column="1" FontSize="24" Margin="10" Text="{x:Static local:Resource.Recent}"/>
                <Fluent:Gallery Grid.Row="1"
                                Grid.Column="1"
                                BorderThickness="1"
                                HorizontalContentAlignment="Stretch"
                                MaxItemsInRow="1"
                                Margin="10,0"
                                Padding="0,5"
                                MouseDoubleClick="Gallery_MouseDoubleClick"
                                ItemsSource="{Binding RecentlyOpenedFiles, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                    <Fluent:Gallery.ItemTemplate>
                        <DataTemplate>
                            <!--binding to a tuple-->
                            <StackPanel Orientation="Vertical" ToolTip="{Binding Item1}" Margin="5">
                                <TextBlock Text="{Binding Item1}" FontWeight="Bold" TextWrapping="Wrap"/>
                                <TextBlock Text="{Binding Item2}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Fluent:Gallery.ItemTemplate>
                </Fluent:Gallery>
            </Grid>
        </Page>

        <Style x:Key="PolicySpinnerStyle" TargetType="{x:Type Fluent:Spinner}">
            <Setter Property="Format" Value="N0"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="InputWidth" Value="60"/>
        </Style>
    </Fluent:RibbonWindow.Resources>

    <DockPanel>
        <Fluent:Ribbon DockPanel.Dock="Top">
            <!--start page-->
            <Fluent:Ribbon.StartScreen>
                <Fluent:StartScreen IsOpen="True">
                    <Fluent:StartScreenTabControl RightContent="{StaticResource OpenFilePage}">
                        <Fluent:StartScreenTabControl.LeftContent>
                            <StackPanel TextBlock.Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}">
                                <TextBlock Text="{x:Static local:Resource.Title}" FontSize="36" Margin="5" MaxWidth="300" TextWrapping="Wrap"/>
                                <TextBlock Text="{x:Static local:Resource.StartPageHelpText}" Margin="5" MaxWidth="300" TextWrapping="Wrap"/>

                                <Fluent:MenuItem Foreground="{StaticResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}"
                                                 Header="{x:Static local:Resource.CloseStartScreen}"
                                                 Height="32"
                                                 IsDefinitive="True"
                                                 Margin="5">
                                    <Fluent:MenuItem.Icon>
                                        <Rectangle Fill="{StaticResource CancelIcon}"/>
                                    </Fluent:MenuItem.Icon>
                                </Fluent:MenuItem>
                            </StackPanel>
                        </Fluent:StartScreenTabControl.LeftContent>
                    </Fluent:StartScreenTabControl>
                </Fluent:StartScreen>
            </Fluent:Ribbon.StartScreen>

            <!--file menu-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="{x:Static local:Resource.Open}">
                            <Frame Content="{StaticResource OpenFilePage}" Margin="20"/>
                        </Fluent:BackstageTabItem>

                        <Fluent:Button Header="{x:Static local:Resource.Save}" Command="Save"/>

                        <Fluent:BackstageTabItem Header="{x:Static local:Resource.About}">
                            <StackPanel Margin="20" Orientation="Vertical">
                                <TextBlock FontSize="36" Margin="5" Text="{x:Static local:Resource.Title}"/>
                                <TextBlock Margin="5" Text="Version 0.0.0.9"/>
                                <TextBlock Margin="5" Text="{x:Static local:Resource.ThirdPartyProject}"/>
                                <Fluent:Gallery BorderThickness="1" Margin="5" MaxItemsInRow="1">
                                    <Fluent:GalleryItem IsDefinitive="False">Extended WPF Toolkit (dotnetproject fork)</Fluent:GalleryItem>
                                    <Fluent:GalleryItem IsDefinitive="False">Fluent.Ribbon</Fluent:GalleryItem>
                                    <Fluent:GalleryItem IsDefinitive="False">npoi</Fluent:GalleryItem>
                                    <Fluent:GalleryItem IsDefinitive="False">RangeTree</Fluent:GalleryItem>
                                    <Fluent:GalleryItem IsDefinitive="False">Visual Studio 2019 Icons Library</Fluent:GalleryItem>
                                </Fluent:Gallery>
                            </StackPanel>
                        </Fluent:BackstageTabItem>

                        <Fluent:SeparatorTabItem/>

                        <Fluent:Button Header="{x:Static local:Resource.Exit}" Command="Close"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--home tab-->
            <Fluent:RibbonTabItem Header="{x:Static local:Resource.Home}" ReduceOrder="viewGroup,constraintGroup,arrangementGroup">
                <Fluent:RibbonGroupBox Name="arrangementGroup" Header="{x:Static local:Resource.ArrangementGroup}">
                    <Fluent:Button Name="startArrangementButton"
                                   Header="{x:Static local:Resource.StartArrangement}"
                                   Command="{x:Static local:MainWindow.StartArrangement}">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.StartArrangement}"
                                              Text="{x:Static local:Resource.StartArrangementTooltip}"
                                              DisableReason="{x:Static local:Resource.FileNotLoadedText}"/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Name="stopArrangementButton"
                                   Header="{x:Static local:Resource.StopArrangement}"
                                   IsEnabled="False"
                                   Command="{x:Static local:MainWindow.StopArrangement}">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource StopIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource StopIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.StopArrangement}"
                                              Text="{x:Static local:Resource.StopArrangementTooltip}"
                                              DisableReason="{x:Static local:Resource.ArrangementIsNotStarted}"/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>

                    <Separator/>

                    <Fluent:Spinner Name="iterationsSpinner"
                                    Style="{StaticResource PolicySpinnerStyle}"
                                    Header="{x:Static local:Resource.Iterations}"
                                    Maximum="2000" Minimum="100" Value="400" Increment="10">
                        <Fluent:Spinner.Icon>
                            <Rectangle Fill="{StaticResource IterationCountIcon}"/>
                        </Fluent:Spinner.Icon>
                        <Fluent:Spinner.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.Iterations}"
                                              Text="{x:Static local:Resource.IterationsTooltip}"
                                              DisableReason="{x:Static local:Resource.ArrangementIsInProgress}">
                            </Fluent:ScreenTip>
                        </Fluent:Spinner.ToolTip>
                    </Fluent:Spinner>

                    <Fluent:Spinner Name="populationSpinner"
                                    Style="{StaticResource PolicySpinnerStyle}"
                                    Header="{x:Static local:Resource.PopulationSize}"
                                    Maximum="200" Minimum="10" Value="100">
                        <Fluent:Spinner.Icon>
                            <Rectangle Fill="{StaticResource PopulationCountIcon}"/>
                        </Fluent:Spinner.Icon>
                        <Fluent:Spinner.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.PopulationSize}"
                                              Text="{x:Static local:Resource.PopulationSizeToolTip}"
                                              DisableReason="{x:Static local:Resource.ArrangementIsInProgress}"/>
                        </Fluent:Spinner.ToolTip>
                    </Fluent:Spinner>

                    <Fluent:Spinner Name="solutionsSpinner"
                                    Style="{StaticResource PolicySpinnerStyle}"
                                    Header="{x:Static local:Resource.SolutionNum}"
                                    Maximum="{Binding Value, ElementName=populationSpinner}" Minimum="1" Value="10">
                        <Fluent:Spinner.Icon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Spinner.Icon>
                        <Fluent:Spinner.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.SolutionNum}"
                                              Text="{x:Static local:Resource.SolutionNumTooltip}"
                                              DisableReason="{x:Static local:Resource.ArrangementIsInProgress}"/>
                        </Fluent:Spinner.ToolTip>
                    </Fluent:Spinner>

                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="constraintGroup" Header="{x:Static local:Resource.Constraints}">
                    <Fluent:Button Header="{x:Static local:Resource.NewConstraint}"
                                   Click="AddConstraintButtonClick" SizeDefinition="Large,Middle,Small">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource NewRuleIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource NewRuleIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.NewConstraint}"
                                              Text="{x:Static local:Resource.NewConstraintTooltip}"/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Header="{x:Static local:Resource.Manage}"
                                   Click="ManageConstraintButtonClick" SizeDefinition="Large,Middle,Small">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.Manage}" Text="{x:Static local:Resource.ManageTooltip}"/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="viewGroup" Header="{x:Static local:Resource.View}">
                    <Fluent:ToggleButton Name="invigilateFileViewButton"
                                         Header="{x:Static local:Resource.InvigilateFile}"
                                         GroupName="viewGroup"
                                         SizeDefinition="Middle,Small,Small"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/InvigilateFileViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.InvigilateFile}"
                                              Text="{x:Static local:Resource.InvigilateFileTooltip}"
                                              DisableReason="{x:Static local:Resource.FileNotLoadedText}"/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Name="trOfficeFileViewButton"
                                         Header="{x:Static local:Resource.TROfficeFile}"
                                         GroupName="viewGroup"
                                         SizeDefinition="Middle,Small,Small"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TRFileViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.TROfficeFile}"
                                              Text="{x:Static local:Resource.TROfficeFileTooltip}"
                                              DisableReason="{x:Static local:Resource.FileNotLoadedText}"/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Name="tableViewButton"
                                         Header="{x:Static local:Resource.ResultTable}"
                                         GroupName="viewGroup"
                                         SizeDefinition="Middle,Small,Small"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TableViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource TableIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.ResultTable}"
                                              Text="{x:Static local:Resource.ResultTableTooltip}"
                                              DisableReason="{x:Static local:Resource.FileNotLoadedText}"/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="{x:Static local:Resource.ResultTools}" Group="{Binding Source={x:Reference Name=resultGroup}}">
                <Fluent:RibbonGroupBox Header="{x:Static local:Resource.Selected}">
                    <Fluent:InRibbonGallery Name="selectedSolutionGallery"
                                            AlternationCount="{Binding Path=(local:Session.Arrangements).Count}"
                                            ItemsSource="{Binding Path=(local:Session.Arrangements)}"
                                            IsSynchronizedWithCurrentItem="True"
                                            MaxItemsInRow="3"
                                            MinWidth="240">
                        <Fluent:InRibbonGallery.ItemTemplate>
                            <!--https://stackoverflow.com/questions/745568/numbered-listbox/748383-->
                            <DataTemplate>
                                <TextBlock MinWidth="80"
                                           Text="{Binding RelativeSource={RelativeSource TemplatedParent},
                                    Path=TemplatedParent.(ItemsControl.AlternationIndex), StringFormat=Solution \#\{0\}}"/>
                            </DataTemplate>
                        </Fluent:InRibbonGallery.ItemTemplate>
                        <Fluent:InRibbonGallery.ToolTip>
                            <Fluent:ScreenTip Title="{x:Static local:Resource.Selected}"
                                              Text="{x:Static local:Resource.SelectedTooltip}"/>
                        </Fluent:InRibbonGallery.ToolTip>
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:Ribbon.ContextualGroups>
                <Fluent:RibbonContextualTabGroup x:Name="resultGroup" Header="{x:Static local:Resource.ResultTools}" Background="Green" BorderBrush="Green"
                                                 Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, ElementName=tableViewButton, Path=IsChecked}"/>
            </Fluent:Ribbon.ContextualGroups>
        </Fluent:Ribbon>

        <!--status bar-->
        <Fluent:StatusBar DockPanel.Dock="Bottom">
            <Fluent:StatusBarItem HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <ProgressBar Name="arrangementProgessBar" MinWidth="160" Maximum="{Binding Value, ElementName=iterationsSpinner}" Visibility="Collapsed"/>
            </Fluent:StatusBarItem>
            <Fluent:StatusBarItem HorizontalAlignment="Left">
                <TextBlock Name="statusText" Margin="5" Text="{x:Static local:Resource.ArrangementIsNotStarted}"/>
            </Fluent:StatusBarItem>
        </Fluent:StatusBar>

        <!--window content-->
        <Frame Name="mainViewFrame" NavigationUIVisibility="Hidden"/>
    </DockPanel>
</Fluent:RibbonWindow>
