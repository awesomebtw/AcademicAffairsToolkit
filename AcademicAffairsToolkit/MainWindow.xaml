<Fluent:RibbonWindow x:Class="AcademicAffairsToolkit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AcademicAffairsToolkit"
        mc:Ignorable="d"
        xmlns:Fluent="urn:fluent-ribbon"
        Title="Academic Affairs Toolkit"
        Height="500" Width="800" MinHeight="300" MinWidth="400"
        WindowStartupLocation="CenterScreen">
    
    <Window.CommandBindings>
        <CommandBinding Command="Open" CanExecute="OpenCommandCanExecute" Executed="OpenCommandExecuted"/>
        <CommandBinding Command="Save" CanExecute="SaveCommandCanExecute" Executed="SaveCommandExecuted"/>
        <CommandBinding Command="Close" CanExecute="CloseCommandCanExecute" Executed="CloseCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.ToggleView}" CanExecute="ToggleViewCommandCanExecute" Executed="ToggleViewCommandExecuted"/>
        <CommandBinding Command="{x:Static local:MainWindow.StartArrangement}" CanExecute="StartArrangementCanExecute" Executed="StartArrangementExecuted"/>
    </Window.CommandBindings>

    <DockPanel>
        <Fluent:Ribbon DockPanel.Dock="Top">
            <!--file menu-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="Open">
                            <Grid Margin="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="1" Grid.Column="0">
                                    <Fluent:Button Height="Auto"
                                                   Header="Open..."
                                                   Command="Open">
                                        <Fluent:Button.Icon>
                                            <Rectangle Fill="{StaticResource OpenFileIcon}"/>
                                        </Fluent:Button.Icon>
                                        <Fluent:Button.LargeIcon>
                                            <Rectangle Fill="{StaticResource OpenFileIcon}"/>
                                        </Fluent:Button.LargeIcon>
                                    </Fluent:Button>
                                </StackPanel>
                                <TextBlock Grid.Row="0" Grid.Column="1" FontSize="24" Margin="20">
                                    Recent
                                </TextBlock>
                                <Fluent:Gallery Grid.Column="1"
                                                Grid.Row="1"
                                                Name="recentlyOpenedGallery"
                                                MaxItemsInRow="1"
                                                Margin="20,0"
                                                Padding="0,5"/>
                            </Grid>
                        </Fluent:BackstageTabItem>

                        <Fluent:Button Header="Save As"
                                       Command="Save"/>

                        <Fluent:BackstageTabItem Header="Settings">
                            <StackPanel Orientation="Horizontal" Margin="20">
                                <GroupBox Header="Appearance" Margin="5" BorderThickness="0">
                                    <ItemsControl>
                                        <Fluent:RadioButton Header="Automatic" GroupName="appearance" IsChecked="True"/>
                                        <Fluent:RadioButton Header="Light" GroupName="appearance"/>
                                        <Fluent:RadioButton Header="Dark" GroupName="appearance"/>
                                    </ItemsControl>
                                </GroupBox>
                            </StackPanel>
                        </Fluent:BackstageTabItem>

                        <Fluent:BackstageTabItem Header="About">
                            <TextBlock Margin="20" Padding="5">
                                <Run FontSize="36">Academic Affairs Toolkit</Run><LineBreak/>
                                Version 0.0.0.2<LineBreak/>
                                Third-party libraries: Fluent.Ribbon, npoi<LineBreak/>
                                Icons: Visual Studio 2019 Icons Library
                            </TextBlock>
                        </Fluent:BackstageTabItem>

                        <Fluent:SeparatorTabItem/>

                        <Fluent:Button Header="Close"
                                       Command="Close"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--home tab-->
            <Fluent:RibbonTabItem Header="Home" ReduceOrder="viewGroup,sortByGroup,clipboardGroup,constraintGroup">
                <Fluent:RibbonGroupBox Name="clipboardGroup" Header="Clipboard">
                    <Fluent:Button Header="Paste"
                                   Icon="{StaticResource Fluent.Ribbon.Images.Paste}"
                                   LargeIcon="{StaticResource Fluent.Ribbon.Images.Paste}"
                                   Command="Paste"/>
                    <Fluent:Button Header="Copy"
                                   Icon="{StaticResource Fluent.Ribbon.Images.Copy}"
                                   LargeIcon="{StaticResource Fluent.Ribbon.Images.Copy}"
                                   Command="Copy"/>
                    <Fluent:Button Header="Cut"
                                   Icon="{StaticResource Fluent.Ribbon.Images.Cut}"
                                   LargeIcon="{StaticResource Fluent.Ribbon.Images.Cut}"
                                   Command="Cut"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Arrange">
                    <Fluent:Button Header="Start auto arrange"
                                   Command="{x:Static local:MainWindow.StartArrangement}">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource StartIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Start arrangement"
                                              Text="Arrange according to invigilate plan, TR office and constraints."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button Header="Arrangement Policy"
                                   Click="ArrangementPolicyButtonClick">
                        <Fluent:Button.Icon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Button.Icon>
                        <Fluent:Button.LargeIcon>
                            <Rectangle Fill="{StaticResource PolicyIcon}"/>
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip Title="Arrangement policy"
                                              Text="Tune arrangement algorithm."/>
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="constraintGroup" Header="Constraints">
                    <Fluent:ToggleButton Header="Enable constraints">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource EnableRuleIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.LargeIcon>
                            <Rectangle Fill="{StaticResource EnableRuleIcon}"/>
                        </Fluent:ToggleButton.LargeIcon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Enable constraints"
                                              Text="Arrangement algorithm will consider constraints if enabled."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:SplitButton Header="Manage...">
                        <Fluent:SplitButton.Icon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:SplitButton.Icon>
                        <Fluent:SplitButton.LargeIcon>
                            <Rectangle Fill="{StaticResource RuleIcon}"/>
                        </Fluent:SplitButton.LargeIcon>
                        <Fluent:SplitButton.ToolTip>
                            <Fluent:ScreenTip Title="Manage constraints"
                                              Text="Add, modify or delete constraints for arrangement."/>
                        </Fluent:SplitButton.ToolTip>
                        <Fluent:MenuItem Header="Add exclude rule">
                            <Fluent:MenuItem.Icon>
                                <Rectangle Fill="{StaticResource NewRuleIcon}"/>
                            </Fluent:MenuItem.Icon>
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Manage constraints">
                            <Fluent:MenuItem.Icon>
                                <Rectangle Fill="{StaticResource RuleIcon}"/>
                            </Fluent:MenuItem.Icon>
                        </Fluent:MenuItem>
                    </Fluent:SplitButton>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Name="sortByGroup" Header="Sort by">
                    <Fluent:InRibbonGallery ItemWidth="60">
                        <Fluent:GalleryItem>
                            <TextBlock>Name</TextBlock>
                        </Fluent:GalleryItem>
                        <Fluent:GalleryItem>
                            <TextBlock>Person</TextBlock>
                        </Fluent:GalleryItem>
                        <Fluent:InRibbonGallery.Menu>
                            <Fluent:RibbonMenu>
                                Invert order
                            </Fluent:RibbonMenu>
                        </Fluent:InRibbonGallery.Menu>
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>

            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="View">
                <Fluent:RibbonGroupBox Header="Original File Views">
                    <Fluent:ToggleButton Name="invigilateFileViewButton"
                                         Header="Invigilate file"
                                         GroupName="viewGroup"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/InvigilateFileViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.LargeIcon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.LargeIcon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Invigilate file view"
                                              Text="See invigilate data loaded from file.
                                              Any invalid or empty line will show default values (e.g. 0)."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Name="trOfficeFileViewButton"
                                         Header="TR office file"
                                         GroupName="viewGroup"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TRFileViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.LargeIcon>
                            <Rectangle Fill="{StaticResource RawFileIcon}"/>
                        </Fluent:ToggleButton.LargeIcon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="TR office file view"
                                              Text="See teaching and researching office data loaded from file.
                                              Any invalid or empty line will show default values (e.g. 0)."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                </Fluent:RibbonGroupBox>
                
                <Fluent:RibbonGroupBox Header="Result View">
                    <Fluent:ToggleButton Header="Plain table"
                                         GroupName="viewGroup"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/TableViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource TableIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.LargeIcon>
                            <Rectangle Fill="{StaticResource TableIcon}"/>
                        </Fluent:ToggleButton.LargeIcon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Table view"
                                              Text="See result in table view."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Gantt"
                                         GroupName="viewGroup"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/GanttViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource GanttIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.LargeIcon>
                            <Rectangle Fill="{StaticResource GanttIcon}"/>
                        </Fluent:ToggleButton.LargeIcon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Gantt view"
                                              Text="See result in gantt view."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton Header="Calendar"
                                         GroupName="viewGroup"
                                         Command="{x:Static local:MainWindow.ToggleView}"
                                         CommandParameter="/CalendarViewPage.xaml">
                        <Fluent:ToggleButton.Icon>
                            <Rectangle Fill="{StaticResource CalendarIcon}"/>
                        </Fluent:ToggleButton.Icon>
                        <Fluent:ToggleButton.LargeIcon>
                            <Rectangle Fill="{StaticResource CalendarIcon}"/>
                        </Fluent:ToggleButton.LargeIcon>
                        <Fluent:ToggleButton.ToolTip>
                            <Fluent:ScreenTip Title="Calendar view"
                                              Text="See result in calendar view."
                                              DisableReason="At least one of two required files wasn't loaded."/>
                        </Fluent:ToggleButton.ToolTip>
                    </Fluent:ToggleButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>

        <!--status bar-->
        <Fluent:StatusBar DockPanel.Dock="Bottom">
            <Fluent:StatusBarItem HorizontalAlignment="Left">
                <TextBlock TextTrimming="CharacterEllipsis" MinWidth="200">
                    <Run Text="TODO: " Foreground="GreenYellow"/>change status bar text here
                </TextBlock>
            </Fluent:StatusBarItem>
        </Fluent:StatusBar>

        <!--window content-->
        <Frame Name="mainViewFrame" NavigationUIVisibility="Hidden"/>
    </DockPanel>
</Fluent:RibbonWindow>
